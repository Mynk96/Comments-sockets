/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-04-01 08:33:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import beans.Comments;
import beans.Comment;
import beans.ReplyData;
import includes.Sessions;

public final class comments_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 ArrayList<Comment> comments = Comments.showComments();
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-/ /W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\t");
 for (Comment comment : comments){ 
      out.write("\r\n");
      out.write("\t\t\t");
 if((comment.getCommentFor().equals("All")) || (comment.getCommentFor().equals(session.getAttribute("name"))) || comment.getName().equals(session.getAttribute("name"))) { 
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t<div class = \"row mayank\">\r\n");
      out.write("\t\t\t\t<div class = \"col-lg-12\">\r\n");
      out.write("\t\t\t\t\t<strong class = \"edited-font\">");
      out.print(comment.getName());
      out.write("</strong><code style=\"margin-left:5px;\">");
      out.print(comment.getCommentFor() );
      out.write("</code><span class = \"pull-right\">");
      out.print(comment.getCommentTime() );
      out.write("</span>\r\n");
      out.write("\t\t\t\t\t<p class = \"comment\">");
      out.print(comment.getComment());
      out.write("</p>\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
	ArrayList<ReplyData> replies  = comment.showReplies(); 
      out.write("\r\n");
      out.write("\t\t");
 for (ReplyData reply : replies){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class = \"well well-sm reply-well\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\">");
      out.print( reply.getName() );
      out.write("</a><span class = \"pull-right\">");
      out.print(reply.time());
      out.write("</span>\r\n");
      out.write("\t\t\t\t\t\t<p>");
      out.print( reply.getReply());
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t<div class = \"comment-box\" hidden>\r\n");
      out.write("\t\t\t\t\t<form class = \"replyForm\">\r\n");
      out.write("\t\t\t<div class = \"form-group\">\r\n");
      out.write("\t\t\t\t<textarea class = \"form-control commentsReply\" value = \" \" name = \"reply\"></textarea>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class = \"form-group\">\r\n");
      out.write("\t\t\t\t<input type = \"hidden\" value = ");
      out.print(comment.getId());
      out.write(" name = \"commentId\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");
 if((session.getAttribute("loggedIn")!= null)  && session.getAttribute("loggedIn").equals("true")){ 
      out.write("\r\n");
      out.write("\t\t\t\t<button class = \"reply btn btn-primary reply-button\" onclick = \"toogleAndSubmit(this)\">Reply</button>\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t\t");
if(comment.getName().equals(session.getAttribute("name")) && comment.read.equals("true")){
      out.write("\r\n");
      out.write("\t\t\t<br><kbd style = \"margin-bottom:5px;\">Seen</kbd><br>\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</div> \r\n");
      out.write("\r\n");
      out.write("\t");
} 
      out.write('\r');
      out.write('\n');
      out.write('	');
} 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
